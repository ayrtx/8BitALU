/*
   This file was generated automatically by the Mojo IDE version B1.3.4.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module mojo_top_0 (
    input clk,
    input rst_n,
    input cclk,
    input spi_ss,
    input spi_mosi,
    input spi_sck,
    input avr_tx,
    input avr_rx_busy,
    output reg [23:0] io_led,
    input [23:0] io_dip
  );
  
  
  
  reg rst;
  
  wire [1-1:0] M_reset_cond_out;
  reg [1-1:0] M_reset_cond_in;
  reset_conditioner_1 reset_cond (
    .clk(clk),
    .in(M_reset_cond_in),
    .out(M_reset_cond_out)
  );
  
  reg nandab;
  
  reg nandaci;
  
  reg nandbci;
  
  reg xorab;
  
  reg [7:0] sum;
  
  reg [7:0] co;
  
  integer i;
  
  always @* begin
    M_reset_cond_in = ~rst_n;
    rst = M_reset_cond_out;
    sum = 8'h00;
    co = 8'h00;
    for (i = 1'h0; i < 4'h8; i = i + 1) begin
      nandab = io_dip[0+(i)*1+0-:1] & io_dip[8+(i)*1+0-:1];
      if (nandab == 1'h1) begin
        nandab = 1'h0;
      end else begin
        nandab = 1'h1;
      end
      nandaci = io_dip[0+(i)*1+0-:1] & co[(i)*1+0-:1];
      if (nandaci == 1'h1) begin
        nandaci = 1'h0;
      end else begin
        nandaci = 1'h1;
      end
      nandbci = io_dip[8+(i)*1+0-:1] & co[(i)*1+0-:1];
      if (nandbci == 1'h1) begin
        nandbci = 1'h0;
      end else begin
        nandbci = 1'h1;
      end
      if (i != 3'h7) begin
        co[(i + 1'h1)*1+0-:1] = nandab & nandaci & nandbci;
        if (co[(i + 1'h1)*1+0-:1] == 1'h1) begin
          co[(i + 1'h1)*1+0-:1] = 1'h0;
        end else begin
          co[(i + 1'h1)*1+0-:1] = 1'h1;
        end
      end
      xorab = io_dip[0+(i)*1+0-:1] ^ io_dip[8+(i)*1+0-:1];
      sum[(i)*1+0-:1] = xorab ^ co[(i)*1+0-:1];
    end
    io_led[0+7-:8] = sum;
    io_led[8+7-:8] = sum;
    io_led[16+7-:8] = sum;
  end
endmodule
